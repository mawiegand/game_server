<%

  # Recuresive function to constrct a hierarchy of divs that matches the quad-tree's
  # structure.
  def render_node(node, width, levels) 
    class_str = ''
    
    if node.leaf?
      class_str = 'class="leaf"'
    elsif levels == 0
      class_str = 'class="subtree"'
    end
    
    string = "<div #{ class_str } style='width: #{width}px; height: #{width}px; border: solid black #{levels+1}px; margin: -#{levels+1}px; display: inline-block; text-align: center; overflow: visible; #{ node.leaf? ? 'font-weight: bold;' : ''}'>"
    if node.leaf? || levels == 0 || node[:c0].blank?
      string += node.path
    else
      string += render_node(node[:c0], width/2, levels-1)
      string += render_node(node[:c1], width/2, levels-1)
      string += render_node(node[:c2], width/2, levels-1)
      string += render_node(node[:c3], width/2, levels-1)
    end
    string += "</div>"
  end
%>

<%= raw(render_node(@map_subtree, 1024, @max_levels)) %>

<script>
/** attach clickable links to leafs -> open nodes#show for that node */
$(document).ready(function () {
  $('.leaf').click(function() {
    var path = 'qt' + $(this).html();
    document.location = '/map/nodes/' + path;  // jump to clicked node !
  });
});

/** attach clickable links to subtrees -> enter that particular subtree */
$(document).ready(function () {
  $('.subtree').click(function() {
    var path = 'qt' + $(this).html();
    document.location = '/map/subtrees/' + path + '?levels=3';  // jump to clicked subtree !
  });
});
</script>