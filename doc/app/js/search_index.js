var search_data = {"index":{"searchIndex":["action","military","movearmyaction","movearmyactionscontroller","movearmyactionshelper","applicationcontroller","applicationhelper","badrequesterror","bearerautherror","bearerauthinsufficientscope","bearerauthinvalidrequest","bearerauthinvalidtoken","events","event","eventscontroller","eventshelper","forbiddenerror","map","areascontroller","areashelper","location","locationscontroller","locationshelper","node","nodescontroller","nodeshelper","region","regionscontroller","regionshelper","subtreescontroller","subtreeshelper","mapping","globalmercator","military","armiescontroller","armieshelper","army","notfounderror","ticker","command","runloop","create()","create()","create()","create()","create()","create()","create_children()","create_root_node()","daemonize()","default_url_options()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","edit()","expand_ancestors()","find_by_address()","get_locale_from_params()","google_to_tms_tile_code()","index()","index()","index()","index()","index()","index()","name()","name=()","new()","new()","new()","new()","new()","new()","new()","new()","quad_tree_to_tms_tile_code()","recount_settlements()","recount_settlements()","render_html_for_exception()","render_json_for_exception()","render_not_modified_or()","render_response_for_exception()","reset()","root()","roots()","run()","run_process()","say()","serializable_hash()","set_locale()","show()","show()","show()","show()","show()","show()","show()","show()","start()","stop()","subtree()","subtree_for_area()","table_name_prefix()","table_name_prefix()","table_name_prefix()","table_name_prefix()","time_action()","tms_to_google_tile_code()","tms_to_quad_tree_tile_code()","update()","update()","update()","update()","update()","update()","readme_for_app"],"longSearchIndex":["action","action::military","action::military::movearmyaction","action::military::movearmyactionscontroller","action::military::movearmyactionshelper","applicationcontroller","applicationhelper","badrequesterror","bearerautherror","bearerauthinsufficientscope","bearerauthinvalidrequest","bearerauthinvalidtoken","events","events::event","events::eventscontroller","events::eventshelper","forbiddenerror","map","map::areascontroller","map::areashelper","map::location","map::locationscontroller","map::locationshelper","map::node","map::nodescontroller","map::nodeshelper","map::region","map::regionscontroller","map::regionshelper","map::subtreescontroller","map::subtreeshelper","mapping","mapping::globalmercator","military","military::armiescontroller","military::armieshelper","military::army","notfounderror","ticker","ticker::command","ticker::runloop","action::military::movearmyactionscontroller#create()","events::eventscontroller#create()","map::locationscontroller#create()","map::nodescontroller#create()","map::regionscontroller#create()","military::armiescontroller#create()","map::node#create_children()","map::node::create_root_node()","ticker::command#daemonize()","applicationcontroller#default_url_options()","action::military::movearmyactionscontroller#destroy()","events::eventscontroller#destroy()","map::locationscontroller#destroy()","map::nodescontroller#destroy()","map::regionscontroller#destroy()","military::armiescontroller#destroy()","action::military::movearmyactionscontroller#edit()","events::eventscontroller#edit()","map::locationscontroller#edit()","map::nodescontroller#edit()","map::regionscontroller#edit()","military::armiescontroller#edit()","map::node#expand_ancestors()","map::node::find_by_address()","applicationcontroller#get_locale_from_params()","mapping::globalmercator::google_to_tms_tile_code()","action::military::movearmyactionscontroller#index()","events::eventscontroller#index()","map::locationscontroller#index()","map::nodescontroller#index()","map::regionscontroller#index()","military::armiescontroller#index()","ticker::runloop#name()","ticker::runloop#name=()","action::military::movearmyactionscontroller#new()","events::eventscontroller#new()","map::locationscontroller#new()","map::nodescontroller#new()","map::regionscontroller#new()","military::armiescontroller#new()","ticker::command::new()","ticker::runloop::new()","mapping::globalmercator::quad_tree_to_tms_tile_code()","map::node#recount_settlements()","map::region#recount_settlements()","applicationcontroller#render_html_for_exception()","applicationcontroller#render_json_for_exception()","applicationhelper#render_not_modified_or()","applicationcontroller#render_response_for_exception()","ticker::runloop::reset()","map::node::root()","map::node::roots()","ticker::command#run()","ticker::command#run_process()","ticker::runloop#say()","map::node#serializable_hash()","applicationcontroller#set_locale()","action::military::movearmyactionscontroller#show()","events::eventscontroller#show()","map::areascontroller#show()","map::locationscontroller#show()","map::nodescontroller#show()","map::regionscontroller#show()","map::subtreescontroller#show()","military::armiescontroller#show()","ticker::runloop#start()","ticker::runloop#stop()","map::node#subtree()","map::node#subtree_for_area()","action::military::table_name_prefix()","events::table_name_prefix()","map::table_name_prefix()","military::table_name_prefix()","applicationcontroller#time_action()","mapping::globalmercator::tms_to_google_tile_code()","mapping::globalmercator::tms_to_quad_tree_tile_code()","action::military::movearmyactionscontroller#update()","events::eventscontroller#update()","map::locationscontroller#update()","map::nodescontroller#update()","map::regionscontroller#update()","military::armiescontroller#update()",""],"info":[["Action","","Action.html","",""],["Action::Military","","Action/Military.html","",""],["Action::Military::MoveArmyAction","","Action/Military/MoveArmyAction.html","",""],["Action::Military::MoveArmyActionsController","","Action/Military/MoveArmyActionsController.html","",""],["Action::Military::MoveArmyActionsHelper","","Action/Military/MoveArmyActionsHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BadRequestError","","BadRequestError.html","",""],["BearerAuthError","","BearerAuthError.html","",""],["BearerAuthInsufficientScope","","BearerAuthInsufficientScope.html","","<p>Error thrown in case an attempt to authorize a request with a bearer token\nfails due to an authorization …\n"],["BearerAuthInvalidRequest","","BearerAuthInvalidRequest.html","","<p>Error thrown in case an attempt to authorize a request with a bearer token\nfails due to an invalid request …\n"],["BearerAuthInvalidToken","","BearerAuthInvalidToken.html","","<p>Error thrown in case an attempt to authorize a request with a bearer token\nfails due to an invalid token …\n"],["Events","","Events.html","",""],["Events::Event","","Events/Event.html","",""],["Events::EventsController","","Events/EventsController.html","",""],["Events::EventsHelper","","Events/EventsHelper.html","",""],["ForbiddenError","","ForbiddenError.html","",""],["Map","","Map.html","",""],["Map::AreasController","","Map/AreasController.html","",""],["Map::AreasHelper","","Map/AreasHelper.html","",""],["Map::Location","","Map/Location.html","",""],["Map::LocationsController","","Map/LocationsController.html","",""],["Map::LocationsHelper","","Map/LocationsHelper.html","",""],["Map::Node","","Map/Node.html","","<p>This model realizes a quad-tree (of nodes and leafs) for representing maps\nusing the common tiling.  …\n"],["Map::NodesController","","Map/NodesController.html","",""],["Map::NodesHelper","","Map/NodesHelper.html","",""],["Map::Region","","Map/Region.html","",""],["Map::RegionsController","","Map/RegionsController.html","",""],["Map::RegionsHelper","","Map/RegionsHelper.html","",""],["Map::SubtreesController","","Map/SubtreesController.html","",""],["Map::SubtreesHelper","","Map/SubtreesHelper.html","",""],["Mapping","","Mapping.html","",""],["Mapping::GlobalMercator","","Mapping/GlobalMercator.html","",""],["Military","","Military.html","",""],["Military::ArmiesController","","Military/ArmiesController.html","",""],["Military::ArmiesHelper","","Military/ArmiesHelper.html","",""],["Military::Army","","Military/Army.html","",""],["NotFoundError","","NotFoundError.html","",""],["Ticker","","Ticker.html","","<p>this daemon’s runloop is based on delayed_job\ngithub.com/collectiveidea/delayed_job/\n"],["Ticker::Command","","Ticker/Command.html","",""],["Ticker::Runloop","","Ticker/Runloop.html","",""],["create","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-create","()","<p>POST /action/military/move_army_actions POST\n/action/military/move_army_actions.json\n"],["create","Events::EventsController","Events/EventsController.html#method-i-create","()","<p>POST /events/events POST /events/events.json\n"],["create","Map::LocationsController","Map/LocationsController.html#method-i-create","()","<p>POST /map/locations POST /map/locations.json\n"],["create","Map::NodesController","Map/NodesController.html#method-i-create","()","<p>POST /map/nodes TODO: block this for the API\n"],["create","Map::RegionsController","Map/RegionsController.html#method-i-create","()","<p>POST /map/regions POST /map/regions.json\n"],["create","Military::ArmiesController","Military/ArmiesController.html#method-i-create","()","<p>POST /military/armies POST /military/armies.json\n"],["create_children","Map::Node","Map/Node.html#method-i-create_children","()","<p>path: uses microsoft quad-tree notation\n"],["create_root_node","Map::Node","Map/Node.html#method-c-create_root_node","()","<p>a class method that creates the root node of the quad tree. the root node\nhas no parent_id set and is …\n"],["daemonize","Ticker::Command","Ticker/Command.html#method-i-daemonize","()",""],["default_url_options","ApplicationController","ApplicationController.html#method-i-default_url_options","(options={})","<p>This method adds the locale to all rails-generated path, e.g. root_path.\nBased on I18n documentation …\n"],["destroy","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-destroy","()","<p>DELETE /action/military/move_army_actions/1 DELETE\n/action/military/move_army_actions/1.json\n"],["destroy","Events::EventsController","Events/EventsController.html#method-i-destroy","()","<p>DELETE /events/events/1 DELETE /events/events/1.json\n"],["destroy","Map::LocationsController","Map/LocationsController.html#method-i-destroy","()","<p>DELETE /map/locations/1 DELETE /map/locations/1.json\n"],["destroy","Map::NodesController","Map/NodesController.html#method-i-destroy","()","<p>DELETE /map/nodes/1 TODO: block this for the API\n"],["destroy","Map::RegionsController","Map/RegionsController.html#method-i-destroy","()","<p>DELETE /map/regions/1 DELETE /map/regions/1.json\n"],["destroy","Military::ArmiesController","Military/ArmiesController.html#method-i-destroy","()","<p>DELETE /military/armies/1 DELETE /military/armies/1.json\n"],["edit","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-edit","()","<p>GET /action/military/move_army_actions/1/edit\n"],["edit","Events::EventsController","Events/EventsController.html#method-i-edit","()","<p>GET /events/events/1/edit\n"],["edit","Map::LocationsController","Map/LocationsController.html#method-i-edit","()","<p>GET /map/locations/1/edit\n"],["edit","Map::NodesController","Map/NodesController.html#method-i-edit","()","<p>GET /map/nodes/1/edit\n"],["edit","Map::RegionsController","Map/RegionsController.html#method-i-edit","()","<p>GET /map/regions/1/edit\n"],["edit","Military::ArmiesController","Military/ArmiesController.html#method-i-edit","()","<p>GET /military/armies/1/edit\n"],["expand_ancestors","Map::Node","Map/Node.html#method-i-expand_ancestors","()","<p>expands the ancestors of the given node (or subtree) and returns a subtree \nwith a complete ‘path’ from …\n"],["find_by_address","Map::Node","Map/Node.html#method-c-find_by_address","(address)","<p>Finder method for various options of how to address individual nodes. Nodes\ncan be addressed using one …\n"],["get_locale_from_params","ApplicationController","ApplicationController.html#method-i-get_locale_from_params","()","<p>Checks whether the user specified locale is available.\n"],["google_to_tms_tile_code","Mapping::GlobalMercator","Mapping/GlobalMercator.html#method-c-google_to_tms_tile_code","(tx, ty, zoom)","<p>transforms a xyz coordinate in google’s format to TMS format\n"],["index","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-index","()","<p>GET /action/military/move_army_actions GET\n/action/military/move_army_actions.json\n"],["index","Events::EventsController","Events/EventsController.html#method-i-index","()","<p>GET /events/events GET /events/events.json\n"],["index","Map::LocationsController","Map/LocationsController.html#method-i-index","()","<p>GET /map/locations GET /map/locations.json\n"],["index","Map::NodesController","Map/NodesController.html#method-i-index","()","<p>GET /map/nodes TODO: block this for the API\n"],["index","Map::RegionsController","Map/RegionsController.html#method-i-index","()","<p>GET /map/regions\n"],["index","Military::ArmiesController","Military/ArmiesController.html#method-i-index","()","<p>Returns a list of armies in a region or at a location. There are three \nmodes to request the list for …\n"],["name","Ticker::Runloop","Ticker/Runloop.html#method-i-name","()","<p>Every worker has a unique name which by default is the pid of the process.\nThere are some advantages …\n"],["name=","Ticker::Runloop","Ticker/Runloop.html#method-i-name-3D","(val)","<p>Sets the name of the worker. Setting the name to nil will reset the default\nworker name\n"],["new","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-new","()","<p>GET /action/military/move_army_actions/new GET\n/action/military/move_army_actions/new.json\n"],["new","Events::EventsController","Events/EventsController.html#method-i-new","()","<p>GET /events/events/new GET /events/events/new.json\n"],["new","Map::LocationsController","Map/LocationsController.html#method-i-new","()","<p>GET /map/locations/new GET /map/locations/new.json\n"],["new","Map::NodesController","Map/NodesController.html#method-i-new","()","<p>GET /map/nodes/new TODO: block this for the API\n"],["new","Map::RegionsController","Map/RegionsController.html#method-i-new","()","<p>GET /map/regions/new GET /map/regions/new.json\n"],["new","Military::ArmiesController","Military/ArmiesController.html#method-i-new","()","<p>GET /military/armies/new GET /military/armies/new.json\n"],["new","Ticker::Command","Ticker/Command.html#method-c-new","(args)",""],["new","Ticker::Runloop","Ticker/Runloop.html#method-c-new","(options={})",""],["quad_tree_to_tms_tile_code","Mapping::GlobalMercator","Mapping/GlobalMercator.html#method-c-quad_tree_to_tms_tile_code","(path)","<p>transforms a quad tree path to an xyz coordinate in TMS format.\n"],["recount_settlements","Map::Node","Map/Node.html#method-i-recount_settlements","(recursive=false)",""],["recount_settlements","Map::Region","Map/Region.html#method-i-recount_settlements","()",""],["render_html_for_exception","ApplicationController","ApplicationController.html#method-i-render_html_for_exception","(exception)",""],["render_json_for_exception","ApplicationController","ApplicationController.html#method-i-render_json_for_exception","(exception)",""],["render_not_modified_or","ApplicationHelper","ApplicationHelper.html#method-i-render_not_modified_or","(last_modified)","<p>This is a snippet from “Restful web services” to realize conditional get by\na simple  wrapper …\n"],["render_response_for_exception","ApplicationController","ApplicationController.html#method-i-render_response_for_exception","(exception)",""],["reset","Ticker::Runloop","Ticker/Runloop.html#method-c-reset","()",""],["root","Map::Node","Map/Node.html#method-c-root","()","<p>returns the first root found in the database (level = 0)\n"],["roots","Map::Node","Map/Node.html#method-c-roots","()","<p>returns all root nodes in the database (level = 0)\n"],["run","Ticker::Command","Ticker/Command.html#method-i-run","(worker_name = nil)",""],["run_process","Ticker::Command","Ticker/Command.html#method-i-run_process","(process_name, dir)",""],["say","Ticker::Runloop","Ticker/Runloop.html#method-i-say","(text, level = Logger::INFO)",""],["serializable_hash","Map::Node","Map/Node.html#method-i-serializable_hash","(options = nil)","<p>include region information for leaf nodes\n"],["set_locale","ApplicationController","ApplicationController.html#method-i-set_locale","()","<p>Set the locale according to the user specified locale or to the default\nlocale, if not specified or specified …\n"],["show","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-show","()","<p>GET /action/military/move_army_actions/1 GET\n/action/military/move_army_actions/1.json\n"],["show","Events::EventsController","Events/EventsController.html#method-i-show","()","<p>GET /events/events/1 GET /events/events/1.json\n"],["show","Map::AreasController","Map/AreasController.html#method-i-show","()",""],["show","Map::LocationsController","Map/LocationsController.html#method-i-show","()","<p>GET /map/locations/1 GET /map/locations/1.json\n"],["show","Map::NodesController","Map/NodesController.html#method-i-show","()","<p>Shows individual nodes. Does not need any authentication; the map structure\nis public and therefore world-readable. …\n"],["show","Map::RegionsController","Map/RegionsController.html#method-i-show","()","<p>GET /map/regions/1 GET /map/regions/1.json\n"],["show","Map::SubtreesController","Map/SubtreesController.html#method-i-show","()","<p>Shows whole subtrees below a given node. Does not need any authentication;\nthe map  structure is public …\n"],["show","Military::ArmiesController","Military/ArmiesController.html#method-i-show","()","<p>Returns detailed information to the army with the given id. For JSON, \nthere are two different modes …\n"],["start","Ticker::Runloop","Ticker/Runloop.html#method-i-start","()",""],["stop","Ticker::Runloop","Ticker/Runloop.html#method-i-stop","()",""],["subtree","Map::Node","Map/Node.html#method-i-subtree","(num_levels, modified_since_timestamp = nil)","<p>returns the subtree starting at this node. Expands the tree to a maximum of\nnum_levels levels. Should …\n"],["subtree_for_area","Map::Node","Map/Node.html#method-i-subtree_for_area","(x, y, width, height, level)","<p>returns the subtree spanning the given target area starting at this node. \nExpands the tree to level …\n"],["table_name_prefix","Action::Military","Action/Military.html#method-c-table_name_prefix","()",""],["table_name_prefix","Events","Events.html#method-c-table_name_prefix","()",""],["table_name_prefix","Map","Map.html#method-c-table_name_prefix","()",""],["table_name_prefix","Military","Military.html#method-c-table_name_prefix","()",""],["time_action","ApplicationController","ApplicationController.html#method-i-time_action","()",""],["tms_to_google_tile_code","Mapping::GlobalMercator","Mapping/GlobalMercator.html#method-c-tms_to_google_tile_code","(tx, ty, zoom)","<p>transforms a xyz coordinate in TMS format (origin in lower left  corner) to\ngoogle’s XYZ format (origin …\n"],["tms_to_quad_tree_tile_code","Mapping::GlobalMercator","Mapping/GlobalMercator.html#method-c-tms_to_quad_tree_tile_code","(tx, ty, zoom)","<p>transforms a xyz TMS coordinate to microsofts quad tree code.\n"],["update","Action::Military::MoveArmyActionsController","Action/Military/MoveArmyActionsController.html#method-i-update","()","<p>PUT /action/military/move_army_actions/1 PUT\n/action/military/move_army_actions/1.json\n"],["update","Events::EventsController","Events/EventsController.html#method-i-update","()","<p>PUT /events/events/1 PUT /events/events/1.json\n"],["update","Map::LocationsController","Map/LocationsController.html#method-i-update","()","<p>PUT /map/locations/1 PUT /map/locations/1.json\n"],["update","Map::NodesController","Map/NodesController.html#method-i-update","()","<p>PUT /map/nodes/1 PUT /map/nodes/1.json\n"],["update","Map::RegionsController","Map/RegionsController.html#method-i-update","()","<p>PUT /map/regions/1 PUT /map/regions/1.json\n"],["update","Military::ArmiesController","Military/ArmiesController.html#method-i-update","()","<p>PUT /military/armies/1 PUT /military/armies/1.json\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}